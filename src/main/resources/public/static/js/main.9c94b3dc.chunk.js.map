{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","console","log","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+ZAIaA,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrC,IAAKD,EAAO,OAAO,KACnB,IAAME,EAAYF,EAAMG,QAAUF,EAAWD,EAAMI,MAAQJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YAEtC,OACI,sBAAKC,UAAWF,EAAa,2BAA6B,4BAA1D,UACI,gCACI,sBAAME,UAAU,KAAhB,iBACA,6BACI,eAAC,IAAD,CAAMC,GAAIJ,EAAV,cAA6BH,OAEjC,oBAAIM,UAAU,aAAd,SAA4BR,EAAMU,OAClC,qBAAIF,UAAU,cAAd,gBAAgCR,EAAMW,SACtC,qBAAIH,UAAU,eAAd,UAA8BR,EAAMO,YAApC,WAAyDP,EAAMY,aAA/D,IAA8EZ,EAAMa,aAExF,sBAAKL,UAAU,qBAAf,UACI,+CACA,4BAAIR,EAAMG,QACV,gDACA,4BAAIH,EAAMI,QACV,kDACA,4BAAIJ,EAAMc,gBACV,yCACA,8BAAId,EAAMe,QAAV,MAAsBf,EAAMgB,kBCzB/BC,G,MAAiB,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpC,IAAKD,EAAO,OAAO,KACnB,IAAME,EAAYF,EAAMG,QAAUF,EAAWD,EAAMI,MAAQJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YAEtC,OACI,sBAAKC,UAAWF,EAAa,0BAA4B,2BAAzD,UACI,sBAAME,UAAU,KAAhB,iBACA,6BACI,eAAC,IAAD,CAAMC,GAAIJ,EAAV,cAA6BH,OAEjC,oBAAGM,UAAU,eAAb,UAA6BR,EAAMO,YAAnC,WAAwDP,EAAMY,aAA9D,IAA6EZ,EAAMa,e,QCTlFK,EAAW,WAAO,IAAD,MAE1B,EAAwBC,mBAAS,CAAEC,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAEQrB,EAAasB,cAAbtB,SAgBR,OAdAuB,qBACI,YACmB,uCAAG,8BAAAC,EAAA,6DACdC,QAAQC,IAAI1B,GADE,SAES2B,MAAM,GAAD,OAAIC,GAAJ,iBAA+C5B,IAF7D,cAER6B,EAFQ,gBAGKA,EAASC,OAHd,OAGRC,EAHQ,OAIdN,QAAQC,IAAIK,GACZV,EAAQU,GALM,2CAAH,qDAOfC,KAEJ,CAAChC,IAGAoB,GAASA,EAAKpB,SAKf,sBAAKO,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,YAAd,SAA2Ba,EAAKpB,aAEpC,sBAAKO,UAAU,mBAAf,0BAEI,cAAC,WAAD,CACIwB,KAAM,CACF,CAAEE,MAAO,SAAUC,MAAOd,EAAKe,aAAef,EAAKgB,UAAWC,MAAO,WACrE,CAAEJ,MAAO,OAAQC,MAAOd,EAAKgB,UAAWC,MAAO,iBAI3D,sBAAK9B,UAAU,uBAAf,UACI,gDACA,cAAC,EAAD,CAAiBP,SAAUoB,EAAKpB,SAAUD,MAAK,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAAMD,eAAR,aAAE,EAAgB,QAfzE,OAiBKC,QAjBL,IAiBKA,GAjBL,UAiBKA,EAAMD,eAjBX,iBAiBK,EAAemB,MAAM,UAjB1B,aAiBK,EAAyBC,KAAI,SAAAxC,GAAK,OAC/B,8BACI,cAAC,EAAD,CAAgBC,SAAUoB,EAAKpB,SAAUD,MAAOA,KAD1CA,EAAMyC,OAGpB,qBAAKjC,UAAU,YAAf,SACI,cAAC,IAAD,CAAMC,GAAE,iBAAYR,EAAZ,oBAAgC4B,QAAxC,0BA1BD,iDCxBFa,G,MAAe,SAAC,GAMzB,IAN2C,IAAhBzC,EAAe,EAAfA,SAEvB0C,EAAQ,GAIHC,EAHSf,OAGMe,GAFRf,OAEsBe,IAClCD,EAAME,KAAKD,GAEf,OACI,oBAAIpC,UAAU,eAAd,SAEQmC,EAAMH,KACF,SAAAM,GAAI,OAAK,6BACL,cAAC,IAAD,CAAMrC,GAAE,iBAAYR,EAAZ,oBAAgC6C,GAAxC,SAAiDA,KADnCA,UCXzBC,G,MAAY,WAErB,MAA8B5B,mBAAS,IAAvC,mBAAOC,EAAP,KAAgB4B,EAAhB,KAEA,EAA2BzB,cAAnBtB,EAAR,EAAQA,SAAU6C,EAAlB,EAAkBA,KAclB,OAZAtB,qBACI,YACsB,uCAAG,8BAAAC,EAAA,sEACMG,MAAM,GAAD,OAAIC,GAAJ,iBAA+C5B,EAA/C,yBAAwE6C,IADnF,cACXhB,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBN,QAAQC,IAAIK,GACZgB,EAAWhB,GAJM,2CAAH,qDAMlBiB,KACD,CAAChD,EAAU6C,IAId,sBAAKtC,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,6CACA,cAAC,EAAD,CAAcP,SAAUA,OAE5B,gCACI,qBAAIO,UAAU,eAAd,UAA8BP,EAA9B,eAAoD6C,KADxD,OAEK1B,QAFL,IAEKA,OAFL,EAEKA,EAASoB,KAAI,SAAAxC,GAAK,OAAI,cAAC,EAAD,CAAgCC,SAAUA,EAAUD,MAAOA,GAArCA,EAAMyC,eC5BtDS,G,MAAW,SAAC,GAAkB,IAAhBjD,EAAe,EAAfA,SAEvB,OACI,qBAAMO,UAAU,WAAhB,SACI,6BACI,eAAC,IAAD,CAAMC,GAAE,iBAAYR,GAApB,cAAkCA,WCLrCkD,G,MAAW,WAEpB,MAA0BhC,mBAAS,IAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KAcA,OAZA7B,qBACI,YACuB,uCAAG,8BAAAC,EAAA,sEACKG,MAAM,GAAD,OAAIC,GAAJ,UADV,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBN,QAAQC,IAAIK,GACZqB,EAASrB,GAJS,2CAAH,qDAMnBsB,KACD,IAIH,sBAAK9C,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,6BAEJ,qBAAKA,UAAU,YAAf,SACK4C,EAAMZ,KAAI,SAAAnB,GAAI,OAAI,cAAC,EAAD,CAAwBpB,SAAUoB,EAAKpB,UAAxBoB,EAAKoB,cCAxCc,MApBf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,iCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCNGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c94b3dc.chunk.js","sourcesContent":["import './MatchDetailCard.scss'\nimport { React } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const MatchDetailCard = ({ match, teamName }) => {\n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n            <div>\n                <span className=\"vs\">vs </span>\n                <h3>\n                    <Link to={otherTeamRoute} > {otherTeam}</Link>\n                </h3>\n                <h2 className=\"match-date\">{match.date}</h2>\n                <h3 className=\"match-venue\">at {match.venue}</h3>\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n            </div>\n            <div className=\"additional-details\">\n                <h3>First Innings</h3>\n                <p>{match.team1}</p>\n                <h3>Second Innings</h3>\n                <p>{match.team2}</p>\n                <h3>Man of the match</h3>\n                <p>{match.playerOfMatch}</p>\n                <h3>Umpires</h3>\n                <p>{match.umpire1} , {match.umpire2}</p>\n            </div>\n        </div>\n    );\n}\n","import { React } from 'react'\nimport { Link } from 'react-router-dom'\nimport './MatchSmallCard.scss'\n\nexport const MatchSmallCard = ({ match, teamName }) => {\n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n            <span className=\"vs\">vs </span>\n            <h3>\n                <Link to={otherTeamRoute} > {otherTeam}</Link>\n            </h3>\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n    );\n}\n","import './TeamPage.scss';\nimport { React, useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { MatchDetailCard } from '../components/MatchDetailCard'\nimport { MatchSmallCard } from '../components/MatchSmallCard'\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({ matches: [] });\n\n    const { teamName } = useParams();\n\n    useEffect(\n        () => {\n            const fetchTeam = async () => {\n                console.log(teamName);\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data);\n                setTeam(data);\n            };\n            fetchTeam();\n        },\n        [teamName]\n    );\n\n    if (!team || !team.teamName) {\n        return <h1>Team not found</h1>\n    }\n\n    return (\n        <div className=\"TeamPage\">\n            <div className=\"team-name-section\">\n                <h1 className=\"team-name\">{team.teamName}</h1>\n            </div>\n            <div className=\"win-loss-section\">\n                Wins / Losses\n                <PieChart\n                    data={[\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                    ]}\n                />\n            </div>\n            <div className=\"match-detail-section\">\n                <h3>Latest Matches</h3>\n                <MatchDetailCard teamName={team.teamName} match={team?.matches?.[0]} />\n            </div>\n            {team?.matches?.slice(1)?.map(match =>\n                <div key={match.id}>\n                    <MatchSmallCard teamName={team.teamName} match={match} />\n                </div>)}\n            <div className=\"more-link\">\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}> More ></Link>\n            </div>\n        </div >\n    );\n}\n","import { React } from 'react'\nimport { Link } from 'react-router-dom'\nimport './YearSelector.scss';\n\nexport const YearSelector = ({ teamName }) => {\n\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for (let i = startYear; i <= endYear; i++) {\n        years.push(i);\n    }\n    return (\n        <ol className=\"YearSelector\">\n            {\n                years.map(\n                    year => (<li key={year}>\n                        <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n                    </li>\n                    ))\n            }\n        </ol>\n    );\n}","import { React, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { MatchDetailCard } from '../components/MatchDetailCard'\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n    const [matches, setMatches] = useState([]);\n\n    const { teamName, year } = useParams();\n\n    useEffect(\n        () => {\n            const fetchMatches = async () => {\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n                const data = await response.json();\n                console.log(data);\n                setMatches(data);\n            };\n            fetchMatches();\n        }, [teamName, year]\n    );\n\n    return (\n        <div className=\"MatchPage\">\n            <div className=\"year-selector\">\n                <h3>Select year</h3>\n                <YearSelector teamName={teamName} />\n            </div>\n            <div>\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                {matches?.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\n            </div>\n        </div>\n    );\n}\n","import { React } from 'react'\nimport { Link } from 'react-router-dom'\nimport './TeamTile.scss';\n\nexport const TeamTile = ({ teamName }) => {\n\n    return (\n        < div className=\"TeamTile\">\n            <h1>\n                <Link to={`/teams/${teamName}`}> {teamName}</Link>\n            </h1>\n        </div >\n    );\n\n}","import { React, useEffect, useState } from 'react'\nimport { TeamTile } from '../components/TeamTile';\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(\n        () => {\n            const fetchAllTeams = async () => {\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n                const data = await response.json();\n                console.log(data);\n                setTeams(data);\n            };\n            fetchAllTeams();\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n    );\n}\n","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}